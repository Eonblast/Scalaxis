%  @copyright 2010 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin
%  @end
%
%   Licensed under the Apache License, Version 2.0 (the "License");
%   you may not use this file except in compliance with the License.
%   You may obtain a copy of the License at
%
%       http://www.apache.org/licenses/LICENSE-2.0
%
%   Unless required by applicable law or agreed to in writing, software
%   distributed under the License is distributed on an "AS IS" BASIS,
%   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%   See the License for the specific language governing permissions and
%   limitations under the License.
%%%-------------------------------------------------------------------
%%% File    nodelist_SUITE.erl
%%% @author Nico Kruber <kruber@zib.de>
%%% @doc    Unit tests for src/nodelist.erl
%%% @end
%%% Created : 18 May 2010 by Nico Kruber <kruber@zib.de>
%%%-------------------------------------------------------------------
%% @version $Id$
-module(nodelist_SUITE).

-author('kruber@zib.de').
-vsn('$Id$').

-compile(export_all).

-include("unittest.hrl").
-include("scalaris.hrl").

all() ->
    [test_new, test_mk2, test_mk4, test_trunc,
     test_remove1, test_remove2, test_remove3, test_merge, test_add_nodes, test_to_list,
     test_update_ids, test_remove_outdated].

suite() ->
    [
     {timetrap, {seconds, 20}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

% TODO: add tests for simple node lists (the following tests only test functions with neighborhood structures)

% use macro instead of function so that the output in case of errors is better:
-define(compare_neighborhood(Neighborhood, Node, NodeId, Pred, Preds, Succ, Succs, RealPred, RealSucc),
    fun() ->
            N = Neighborhood, % may be a command -> assigning it to a variable prevents it from being called multiple times
            ?equals_w_note(nodelist:node(N), Node, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:nodeid(N), NodeId, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:pred(N), Pred, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:preds(N), Preds, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:succ(N), Succ, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:succs(N), Succs, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:has_real_pred(N), RealPred, io_lib:format("N = ~p", [??Neighborhood])),
            ?equals_w_note(nodelist:has_real_succ(N), RealSucc, io_lib:format("N = ~p", [??Neighborhood]))
    end()).

%% @doc Tests neighborhood creation with new_neighborhood and compares the
%%      getters with what is expected.
-spec test_new(any()) -> ok.
test_new(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated its ID to 15 here
    N33 = node:new(pid3, 33, 0),
    
    Neighb11 = nodelist:new_neighborhood(N8),
    ?compare_neighborhood(Neighb11, N8, 8, N8, [N8], N8, [N8], false, false),
    
    Neighb21 = nodelist:new_neighborhood(N8, N14),
    Neighb22 = nodelist:new_neighborhood(N14, N8),
    Neighb23 = nodelist:new_neighborhood(N8, N8),
    Neighb24 = nodelist:new_neighborhood(N15, N14),
    ?compare_neighborhood(Neighb21, N8, 8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb22, N14, 14, N8, [N8], N8, [N8], true, true),
    ?compare_neighborhood(Neighb23, N8, 8, N8, [N8], N8, [N8], false, false),
    ?compare_neighborhood(Neighb24, N15, 15, N15, [N15], N15, [N15], false, false),
    
    Neighb31 = nodelist:new_neighborhood(N14, N8,  N33),
    Neighb32 = nodelist:new_neighborhood(N33, N8,  N14),
    Neighb33 = nodelist:new_neighborhood(N8,  N14, N33),
    Neighb34 = nodelist:new_neighborhood(N33, N14, N8),
    Neighb35 = nodelist:new_neighborhood(N14, N33, N8),
    Neighb36 = nodelist:new_neighborhood(N8,  N33, N14),
    Neighb37 = nodelist:new_neighborhood(N14, N8,  N8),
    Neighb38 = nodelist:new_neighborhood(N8, N8,  N8),
    Neighb39 = nodelist:new_neighborhood(N14, N8,  N15),
    Neighb310 = nodelist:new_neighborhood(N15, N8,  N14),
    Neighb311 = nodelist:new_neighborhood(N8, N15,  N14),
    Neighb312 = nodelist:new_neighborhood(N14, N15,  N8),
    ?compare_neighborhood(Neighb31,  N8,   8, N33, [N33], N14, [N14], true, true),
    ?compare_neighborhood(Neighb32,  N8,   8, N33, [N33], N14, [N14], true, true),
    ?compare_neighborhood(Neighb33,  N14, 14, N8,  [N8],  N33, [N33], true, true),
    ?compare_neighborhood(Neighb34,  N14, 14, N8,  [N8],  N33, [N33], true, true),
    ?compare_neighborhood(Neighb35,  N33, 33, N14, [N14], N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb36,  N33, 33, N14, [N14], N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb37,  N8,   8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb38,  N8,   8, N8,  [N8],  N8,  [N8],  false, false),
    ?compare_neighborhood(Neighb39,  N8,   8, N15, [N15], N15, [N15], true, true),
    ?compare_neighborhood(Neighb310, N8,   8, N15, [N15], N15, [N15], true, true),
    ?compare_neighborhood(Neighb311, N15, 15, N8,  [N8],  N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb312, N15, 15, N8,  [N8],  N8,  [N8],  true, true),
    
    % tests with pred/succ nodes equal to the base node but newer:
    ?expect_exception(nodelist:new_neighborhood(N14, N15),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:new_neighborhood(N15, N14, N8),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:new_neighborhood(N8, N14, N15),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ok.

%% @doc Tests neighborhood creation with mk_neighborhood/2 and compares the
%%      getters with what is expected.
-spec test_mk2(any()) -> ok.
test_mk2(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated its ID to 15 here
    N33 = node:new(pid3, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),
    
    Neighb11 = nodelist:mk_neighborhood([N8], N8),
    Neighb12 = nodelist:mk_neighborhood([], N8),
    ?compare_neighborhood(Neighb11, N8, 8, N8, [N8], N8, [N8], false, false),
    ?compare_neighborhood(Neighb12, N8, 8, N8, [N8], N8, [N8], false, false),
    
    Neighb21 = nodelist:mk_neighborhood([N8, N14], N8),
    Neighb22 = nodelist:mk_neighborhood([N14, N8], N14),
    Neighb23 = nodelist:mk_neighborhood([N8, N8], N8),
    Neighb24 = nodelist:mk_neighborhood([N14], N8),
    Neighb25 = nodelist:mk_neighborhood([N8], N14),
    Neighb26 = nodelist:mk_neighborhood([N14], N15),
    ?compare_neighborhood(Neighb21, N8,   8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb22, N14, 14, N8,  [N8],  N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb23, N8,   8, N8,  [N8],  N8,  [N8],  false, false),
    ?compare_neighborhood(Neighb24, N8,   8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb25, N14, 14, N8,  [N8],  N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb26, N15, 15, N15, [N15], N15, [N15], false, false),
    
    Neighb31 = nodelist:mk_neighborhood( [N14, N8,  N33], N8),
    Neighb32 = nodelist:mk_neighborhood( [N33, N8,  N14], N8),
    Neighb33 = nodelist:mk_neighborhood( [N8,  N14, N33], N14),
    Neighb34 = nodelist:mk_neighborhood( [N33, N14, N8],  N14),
    Neighb35 = nodelist:mk_neighborhood( [N14, N33, N8],  N33),
    Neighb36 = nodelist:mk_neighborhood( [N8,  N33, N14], N33),
    Neighb37 = nodelist:mk_neighborhood( [N14, N8,  N8],  N8),
    Neighb38 = nodelist:mk_neighborhood( [N8, N8,  N8],   N8),
    Neighb39 = nodelist:mk_neighborhood( [N14, N15],      N8),
    Neighb310 = nodelist:mk_neighborhood([N15, N14],      N8),
    Neighb311 = nodelist:mk_neighborhood([N14, N8],       N15),
    Neighb312 = nodelist:mk_neighborhood([N8, N14],       N15),
    ?compare_neighborhood(Neighb31,  N8,   8, N33, [N33, N14], N14, [N14, N33], true, true),
    ?compare_neighborhood(Neighb32,  N8,   8, N33, [N33, N14], N14, [N14, N33], true, true),
    ?compare_neighborhood(Neighb33,  N14, 14, N8,  [N8, N33],  N33, [N33, N8],  true, true),
    ?compare_neighborhood(Neighb34,  N14, 14, N8,  [N8, N33],  N33, [N33, N8],  true, true),
    ?compare_neighborhood(Neighb35,  N33, 33, N14, [N14, N8],  N8,  [N8, N14],  true, true),
    ?compare_neighborhood(Neighb36,  N33, 33, N14, [N14, N8],  N8,  [N8, N14],  true, true),
    ?compare_neighborhood(Neighb37,  N8,   8, N14, [N14],      N14, [N14],      true, true),
    ?compare_neighborhood(Neighb38,  N8,   8, N8,  [N8],       N8,  [N8],       false, false),
    ?compare_neighborhood(Neighb39,  N8,   8, N15, [N15],      N15, [N15],      true, true),
    ?compare_neighborhood(Neighb310, N8,   8, N15, [N15],      N15, [N15],      true, true),
    ?compare_neighborhood(Neighb311, N15, 15, N8,  [N8],       N8,  [N8],       true, true),
    ?compare_neighborhood(Neighb312, N15, 15, N8,  [N8],       N8,  [N8],       true, true),
    
    % some tests with duplicated nodes:
    Neighb41 = nodelist:mk_neighborhood( [N14, N8, N8,  N33], N8),
    Neighb42 = nodelist:mk_neighborhood( [N33, N8,  N14, N14], N8),
    Neighb43 = nodelist:mk_neighborhood( [N8,  N14, N33, N14], N14),
    Neighb44 = nodelist:mk_neighborhood( [N33, N14, N8, N33, N14],  N14),
    Neighb45 = nodelist:mk_neighborhood( [N14, N33, N8, N14, N8],  N33),
    ?compare_neighborhood(Neighb41,  N8,   8, N33, [N33, N14], N14, [N14, N33], true, true),
    ?compare_neighborhood(Neighb42,  N8,   8, N33, [N33, N14], N14, [N14, N33], true, true),
    ?compare_neighborhood(Neighb43,  N14, 14, N8,  [N8, N33],  N33, [N33, N8],  true, true),
    ?compare_neighborhood(Neighb44,  N14, 14, N8,  [N8, N33],  N33, [N33, N8],  true, true),
    ?compare_neighborhood(Neighb45,  N33, 33, N14, [N14, N8],  N8,  [N8, N14],  true, true),
    
    % tests with nodes equal to the base node in the node list:
    ?compare_neighborhood(nodelist:mk_neighborhood([N8, N33, N14], N15),
                          N15, 15, N8, [N8, N33], N33, [N33, N8], true, true),
    ?expect_exception(nodelist:mk_neighborhood([N8, N33, N15], N14),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N8, N15, N33], N14),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N15, N8, N33], N14),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N15], N14),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    
    % a few tests with longer lists
    Neighb51 = nodelist:mk_neighborhood([N66, N8, N50, N33, N42], N14),
    Neighb52 = nodelist:mk_neighborhood([N66, N8, N50, N14, N33, N42], N14),
    Neighb53 = nodelist:mk_neighborhood([N66, N8, N50, N14, N33, N42], N15),
    ?compare_neighborhood(Neighb51, N14, 14, N8, [N8, N66, N50, N42, N33], N33, [N33, N42, N50, N66, N8], true, true),
    ?compare_neighborhood(Neighb52, N14, 14, N8, [N8, N66, N50, N42, N33], N33, [N33, N42, N50, N66, N8], true, true),
    ?compare_neighborhood(Neighb53, N15, 15, N8, [N8, N66, N50, N42, N33], N33, [N33, N42, N50, N66, N8], true, true),
    ok.

%% @doc Tests neighborhood creation with mk_neighborhood/4 and compares the
%%      getters with what is expected.
-spec test_mk4(any()) -> ok.
test_mk4(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated its ID to 15 here
    N33 = node:new(pid3, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),
    
    Neighb11 = nodelist:mk_neighborhood([N8], N8, 1, 1),
    Neighb12 = nodelist:mk_neighborhood([], N8, 1, 1),
    ?compare_neighborhood(Neighb11, N8, 8, N8, [N8], N8, [N8], false, false),
    ?compare_neighborhood(Neighb12, N8, 8, N8, [N8], N8, [N8], false, false),
    
    Neighb21 = nodelist:mk_neighborhood([N8, N14], N8, 1, 1),
    Neighb22 = nodelist:mk_neighborhood([N14, N8], N14, 1, 1),
    Neighb23 = nodelist:mk_neighborhood([N8, N8], N8, 1, 1),
    Neighb24 = nodelist:mk_neighborhood([N14], N8, 1, 1),
    Neighb25 = nodelist:mk_neighborhood([N8], N14, 1, 1),
    Neighb26 = nodelist:mk_neighborhood([N14], N15, 1, 1),
    ?compare_neighborhood(Neighb21, N8,   8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb22, N14, 14, N8,  [N8],  N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb23, N8,   8, N8,  [N8],  N8,  [N8],  false, false),
    ?compare_neighborhood(Neighb24, N8,   8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb25, N14, 14, N8,  [N8],  N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb26, N15, 15, N15, [N15], N15, [N15], false, false),
    
    Neighb31 = nodelist:mk_neighborhood( [N14, N8,  N33], N8, 1, 1),
    Neighb32 = nodelist:mk_neighborhood( [N33, N8,  N14], N8, 1, 1),
    Neighb33 = nodelist:mk_neighborhood( [N8,  N14, N33], N14, 1, 1),
    Neighb34 = nodelist:mk_neighborhood( [N33, N14, N8],  N14, 1, 1),
    Neighb35 = nodelist:mk_neighborhood( [N14, N33, N8],  N33, 1, 1),
    Neighb36 = nodelist:mk_neighborhood( [N8,  N33, N14], N33, 1, 1),
    Neighb37 = nodelist:mk_neighborhood( [N14, N8,  N8],  N8, 1, 1),
    Neighb38 = nodelist:mk_neighborhood( [N8, N8,  N8],   N8, 1, 1),
    Neighb39 = nodelist:mk_neighborhood( [N14, N15],      N8, 1, 1),
    Neighb310 = nodelist:mk_neighborhood([N15, N14],      N8, 1, 1),
    Neighb311 = nodelist:mk_neighborhood([N14, N8],       N15, 1, 1),
    Neighb312 = nodelist:mk_neighborhood([N8, N14],       N15, 1, 1),
    ?compare_neighborhood(Neighb31,  N8,   8, N33, [N33], N14, [N14], true, true),
    ?compare_neighborhood(Neighb32,  N8,   8, N33, [N33], N14, [N14], true, true),
    ?compare_neighborhood(Neighb33,  N14, 14, N8,  [N8],  N33, [N33], true, true),
    ?compare_neighborhood(Neighb34,  N14, 14, N8,  [N8],  N33, [N33], true, true),
    ?compare_neighborhood(Neighb35,  N33, 33, N14, [N14], N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb36,  N33, 33, N14, [N14], N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb37,  N8,   8, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(Neighb38,  N8,   8, N8,  [N8],  N8,  [N8],  false, false),
    ?compare_neighborhood(Neighb39,  N8,   8, N15, [N15], N15, [N15], true, true),
    ?compare_neighborhood(Neighb310, N8,   8, N15, [N15], N15, [N15], true, true),
    ?compare_neighborhood(Neighb311, N15, 15, N8,  [N8],  N8,  [N8],  true, true),
    ?compare_neighborhood(Neighb312, N15, 15, N8,  [N8],  N8,  [N8],  true, true),
    
    % some tests with duplicated nodes:
    Neighb41 = nodelist:mk_neighborhood( [N14, N8, N8,  N33], N8, 1, 1),
    Neighb42 = nodelist:mk_neighborhood( [N33, N8,  N14, N14], N8, 1, 1),
    Neighb43 = nodelist:mk_neighborhood( [N8,  N14, N33, N14], N14, 1, 1),
    Neighb44 = nodelist:mk_neighborhood( [N33, N14, N8, N33, N14],  N14, 1, 1),
    Neighb45 = nodelist:mk_neighborhood( [N14, N33, N8, N14, N8],  N33, 1, 1),
    ?compare_neighborhood(Neighb41,  N8,   8, N33, [N33], N14, [N14], true, true),
    ?compare_neighborhood(Neighb42,  N8,   8, N33, [N33], N14, [N14], true, true),
    ?compare_neighborhood(Neighb43,  N14, 14, N8,  [N8],  N33, [N33], true, true),
    ?compare_neighborhood(Neighb44,  N14, 14, N8,  [N8],  N33, [N33], true, true),
    ?compare_neighborhood(Neighb45,  N33, 33, N14, [N14], N8,  [N8],  true, true),
    
    % tests with nodes equal to the base node in the node list:
    ?compare_neighborhood(nodelist:mk_neighborhood([N8, N33, N14], N15, 3, 3),
                          N15, 15, N8, [N8, N33], N33, [N33, N8], true, true),
    ?expect_exception(nodelist:mk_neighborhood([N8, N33, N15], N14, 3, 3),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N8, N15, N33], N14, 3, 3),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N15, N8, N33], N14, 3, 3),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N15], N14, 3, 3),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),

    ?compare_neighborhood(nodelist:mk_neighborhood([N8, N33, N14], N15, 1, 1),
                          N15, 15, N8, [N8], N33, [N33], true, true),
    ?expect_exception(nodelist:mk_neighborhood([N8, N33, N15], N14, 1, 1),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N8, N15, N33], N14, 1, 1),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N15, N8, N33], N14, 1, 1),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),
    ?expect_exception(nodelist:mk_neighborhood([N15], N14, 1, 1),
                      throw, 'cannot create a neighborhood() with a neighbor newer than the node itself'),

    % a few tests with longer lists
    Neighb51 = nodelist:mk_neighborhood([N66, N8, N50, N33, N42], N14, 3, 3),
    Neighb52 = nodelist:mk_neighborhood([N66, N8, N50, N14, N33, N42], N14, 3, 3),
    Neighb53 = nodelist:mk_neighborhood([N66, N8, N50, N14, N33, N42], N15, 3, 3),
    Neighb54 = nodelist:mk_neighborhood([N66, N8, N50, N33, N42], N14, 1, 1),
    Neighb55 = nodelist:mk_neighborhood([N66, N8, N50, N14, N33, N42], N14, 1, 1),
    Neighb56 = nodelist:mk_neighborhood([N66, N8, N50, N14, N33, N42], N15, 1, 1),
    ?compare_neighborhood(Neighb51, N14, 14, N8, [N8, N66, N50], N33, [N33, N42, N50], true, true),
    ?compare_neighborhood(Neighb52, N14, 14, N8, [N8, N66, N50], N33, [N33, N42, N50], true, true),
    ?compare_neighborhood(Neighb53, N15, 15, N8, [N8, N66, N50], N33, [N33, N42, N50], true, true),
    ?compare_neighborhood(Neighb54, N14, 14, N8, [N8], N33, [N33], true, true),
    ?compare_neighborhood(Neighb55, N14, 14, N8, [N8], N33, [N33], true, true),
    ?compare_neighborhood(Neighb56, N15, 15, N8, [N8], N33, [N33], true, true),
    ok.

%% @doc Tests truncating neighborhood structures.
-spec test_trunc(any()) -> ok.
test_trunc(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N14 = node:new(pid2, 14, 0),
    N20 = node:new(pid3, 20, 0),
    N33 = node:new(pid4, 33, 0),
    N50 = node:new(pid5, 50, 0),
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20),
    
    Trunc11 = nodelist:trunc(Neighb1, 1, 1),
    Trunc12 = nodelist:trunc(Neighb1, 2, 1),
    Trunc13 = nodelist:trunc(Neighb1, 3, 1),
    Trunc14 = nodelist:trunc(Neighb1, 4, 1),
    Trunc15 = nodelist:trunc(Neighb1, 5, 1),
    Trunc16 = nodelist:trunc(Neighb1, 1, 2),
    Trunc17 = nodelist:trunc(Neighb1, 1, 3),
    Trunc18 = nodelist:trunc(Neighb1, 1, 4),
    Trunc19 = nodelist:trunc(Neighb1, 1, 5),
    Trunc110 = nodelist:trunc(Neighb1, 2, 2),
    Trunc111 = nodelist:trunc(Neighb1, 2, 3),
    Trunc112 = nodelist:trunc(Neighb1, 3, 2),
    Trunc113 = nodelist:trunc(Neighb1, 3, 3),
    Trunc114 = nodelist:trunc(Neighb1, 4, 4),
    Trunc115 = nodelist:trunc(Neighb1, 5, 5),
    ?compare_neighborhood(Trunc11, N20, 20, N14, [N14], N33, [N33], true, true),
    ?compare_neighborhood(Trunc12, N20, 20, N14, [N14, N8], N33, [N33], true, true),
    ?compare_neighborhood(Trunc13, N20, 20, N14, [N14, N8, N50], N33, [N33], true, true),
    ?compare_neighborhood(Trunc14, N20, 20, N14, [N14, N8, N50, N33], N33, [N33], true, true),
    ?compare_neighborhood(Trunc15, N20, 20, N14, [N14, N8, N50, N33], N33, [N33], true, true),
    ?compare_neighborhood(Trunc16, N20, 20, N14, [N14], N33, [N33, N50], true, true),
    ?compare_neighborhood(Trunc17, N20, 20, N14, [N14], N33, [N33, N50, N8], true, true),
    ?compare_neighborhood(Trunc18, N20, 20, N14, [N14], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc19, N20, 20, N14, [N14], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc110, N20, 20, N14, [N14, N8], N33, [N33, N50], true, true),
    ?compare_neighborhood(Trunc111, N20, 20, N14, [N14, N8], N33, [N33, N50, N8], true, true),
    ?compare_neighborhood(Trunc112, N20, 20, N14, [N14, N8, N50], N33, [N33, N50], true, true),
    ?compare_neighborhood(Trunc113, N20, 20, N14, [N14, N8, N50], N33, [N33, N50, N8], true, true),
    ?compare_neighborhood(Trunc114, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc115, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8, N14], true, true),
    
    Trunc21 = nodelist:trunc_preds(Neighb1, 1),
    Trunc22 = nodelist:trunc_preds(Neighb1, 2),
    Trunc23 = nodelist:trunc_preds(Neighb1, 3),
    Trunc24 = nodelist:trunc_preds(Neighb1, 4),
    Trunc25 = nodelist:trunc_preds(Neighb1, 5),
    ?compare_neighborhood(Trunc21, N20, 20, N14, [N14], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc22, N20, 20, N14, [N14, N8], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc23, N20, 20, N14, [N14, N8, N50], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc24, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc25, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8, N14], true, true),
    
    Trunc31 = nodelist:trunc_succs(Neighb1, 1),
    Trunc32 = nodelist:trunc_succs(Neighb1, 2),
    Trunc33 = nodelist:trunc_succs(Neighb1, 3),
    Trunc34 = nodelist:trunc_succs(Neighb1, 4),
    Trunc35 = nodelist:trunc_succs(Neighb1, 5),
    ?compare_neighborhood(Trunc31, N20, 20, N14, [N14, N8, N50, N33], N33, [N33], true, true),
    ?compare_neighborhood(Trunc32, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50], true, true),
    ?compare_neighborhood(Trunc33, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8], true, true),
    ?compare_neighborhood(Trunc34, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8, N14], true, true),
    ?compare_neighborhood(Trunc35, N20, 20, N14, [N14, N8, N50, N33], N33, [N33, N50, N8, N14], true, true),
    
    ok.

%% @doc Tests for nodelist:remove/2.
-spec test_remove1(any()) -> ok.
test_remove1(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), % N8 updated
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated
    N20 = node:new(pid3, 20, 0),
    N33 = node:new(pid4, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33),
    Neighb2 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 3, 3),
    Neighb3 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 2, 2),
    Neighb4 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 1, 1),
    Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),

    % Neighb1 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb1),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?compare_neighborhood(nodelist:remove(N14, Neighb1),
                          N33, 33, N8, [N8, N50, N42], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(N42, Neighb1),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8, N14], true, true),
    ?compare_neighborhood(nodelist:remove(N50, Neighb1),
                          N33, 33, N14, [N14, N8, N42], N42, [N42, N8, N14], true, true),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb1),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb1),
                          N33, 33, N8, [N8, N50, N42], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb1),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8, N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb1),
                          N33, 33, N14, [N14, N8, N42], N42, [N42, N8, N14], true, true),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb1),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb1),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?compare_neighborhood(nodelist:remove(N66, Neighb1),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb1),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb1),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),

    % Neighb2 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 3, 3),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb2),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(N14, Neighb2),
                          N33, 33, N8, [N8, N50], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(N42, Neighb2),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(N50, Neighb2),
                          N33, 33, N14, [N14, N8], N42, [N42, N8], true, true),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb2),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb2),
                          N33, 33, N8, [N8, N50], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb2),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb2),
                          N33, 33, N14, [N14, N8], N42, [N42, N8], true, true),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb2),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb2),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(N66, Neighb2),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb2),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb2),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),

    % Neighb3 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 2, 2),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb3),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(N14, Neighb3),
                          N33, 33, N8, [N8], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(N42, Neighb3),
                          N33, 33, N14, [N14, N8], N50, [N50], true, true),
    ?compare_neighborhood(nodelist:remove(N50, Neighb3),
                          N33, 33, N14, [N14, N8], N42, [N42], true, true),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb3),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb3),
                          N33, 33, N8, [N8], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb3),
                          N33, 33, N14, [N14, N8], N50, [N50], true, true),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb3),
                          N33, 33, N14, [N14, N8], N42, [N42], true, true),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb3),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb3),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(N66, Neighb3),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb3),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb3),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),

    % Neighb4 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 1, 1),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(N14, Neighb4),
                          N33, 33, N42, [N42], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(N42, Neighb4),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(nodelist:remove(N50, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb4),
                          N33, 33, N42, [N42], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb4),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(N66, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb4),
                          N33, 33, N14, [N14], N42, [N42], true, true),

    % Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N14, Neighb5),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid2, Neighb5),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N15, Neighb5),
                          N33, 33, N33, [N33], N33, [N33], false, false),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb5),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(nodelist:remove(N9, Neighb5),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb5),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?compare_neighborhood(nodelist:remove(pid1, Neighb5),
                          N33, 33, N14, [N14], N14, [N14], true, true),

    % Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb6),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?compare_neighborhood(nodelist:remove(N9, Neighb6),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb6),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?compare_neighborhood(nodelist:remove(pid1, Neighb6),
                          N33, 33, N33, [N33], N33, [N33], false, false),

    ok.

%% @doc Tests for nodelist:remove/3.
-spec test_remove2(any()) -> ok.
test_remove2(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), % N8 updated
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated
    N20 = node:new(pid3, 20, 0),
    N33 = node:new(pid4, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),

    RemovedNodesTab = ets:new(test_remove2, [duplicate_bag, private]),
    AddNodeToTabFun = fun(Node) -> ets:insert(RemovedNodesTab, {Node}) end,
    NodeListToTabListFun = fun(NodeList) -> lists:sort([{Node} || Node <- NodeList]) end,
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33),
    Neighb2 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 3, 3),
    Neighb3 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 2, 2),
    Neighb4 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 1, 1),
    Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),

    % Neighb1 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?equals(_N11 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N14, Neighb1, AddNodeToTabFun),
                          N33, 33, N8, [N8, N50, N42], N42, [N42, N50, N8], true, true),
    ?equals(_N12 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N42, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8, N14], true, true),
    ?equals(_N13 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42, N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N50, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N42], N42, [N42, N8, N14], true, true),
    ?equals(_N14 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?equals(_N15 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb1, AddNodeToTabFun),
                          N33, 33, N8, [N8, N50, N42], N42, [N42, N50, N8], true, true),
    ?equals(_N16 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8, N14], true, true),
    ?equals(_N17 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42, N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N42], N42, [N42, N8, N14], true, true),
    ?equals(_N18 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?equals(_N19 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N110 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N66, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N111 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N112 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N113 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb2 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 3, 3),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?equals(_N21 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N14, Neighb2, AddNodeToTabFun),
                          N33, 33, N8, [N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N22 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N42, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8], true, true),
    ?equals(_N23 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N50, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N8], true, true),
    ?equals(_N24 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?equals(_N25 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb2, AddNodeToTabFun),
                          N33, 33, N8, [N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N26 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8], true, true),
    ?equals(_N27 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N8], true, true),
    ?equals(_N28 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?equals(_N29 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N210 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N66, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N211 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N212 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N213 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb3 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 2, 2),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?equals(_N31 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N14, Neighb3, AddNodeToTabFun),
                          N33, 33, N8, [N8], N42, [N42, N50], true, true),
    ?equals(_N32 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N42, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N50, [N50], true, true),
    ?equals(_N33 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N50, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42], true, true),
    ?equals(_N34 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?equals(_N35 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb3, AddNodeToTabFun),
                          N33, 33, N8, [N8], N42, [N42, N50], true, true),
    ?equals(_N36 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N50, [N50], true, true),
    ?equals(_N37 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42], true, true),
    ?equals(_N38 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?equals(_N39 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N310 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N66, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N311 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N312 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N313 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb4 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 1, 1),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N8, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N41 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N14, Neighb4, AddNodeToTabFun),
                          N33, 33, N42, [N42], N42, [N42], true, true),
    ?equals(_N42 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N42, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N43 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N50, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N44 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N45 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb4, AddNodeToTabFun),
                          N33, 33, N42, [N42], N42, [N42], true, true),
    ?equals(_N46 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N47 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N48 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N9, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N49 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N410 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N66, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N411 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N412 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N413 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove(N14, Neighb5, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N51 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid2, Neighb5, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N52 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove(N15, Neighb5, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N53 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb5, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N54 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N9, Neighb5, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N55 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb5, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N56 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid1, Neighb5, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N57 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove(N20, Neighb6, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(N9, Neighb6, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb6, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid1, Neighb6, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    ets:delete(RemovedNodesTab),
    ok.

%% @doc Tests for nodelist:remove2/3.
-spec test_remove3(any()) -> ok.
test_remove3(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), % N8 updated
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated
    N20 = node:new(pid3, 20, 0),
    N33 = node:new(pid4, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),

    RemovedNodesTab = ets:new(test_remove2, [duplicate_bag, private]),
    AddNodeToTabFun = fun(Node) -> ets:insert(RemovedNodesTab, {Node}) end,
    NodeListToTabListFun = fun(NodeList) -> lists:sort([{Node} || Node <- NodeList]) end,
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33),
    Neighb2 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 3, 3),
    Neighb3 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 2, 2),
    Neighb4 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 1, 1),
    Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),

    % Neighb1 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N8) end),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?equals(_N11 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N14) end),
                          N33, 33, N8, [N8, N50, N42], N42, [N42, N50, N8], true, true),
    ?equals(_N12 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N42) end),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8, N14], true, true),
    ?equals(_N13 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42, N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N50) end),
                          N33, 33, N14, [N14, N8, N42], N42, [N42, N8, N14], true, true),
    ?equals(_N14 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?equals(_N15 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb1, AddNodeToTabFun),
                          N33, 33, N8, [N8, N50, N42], N42, [N42, N50, N8], true, true),
    ?equals(_N16 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8, N14], true, true),
    ?equals(_N17 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42, N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N42], N42, [N42, N8, N14], true, true),
    ?equals(_N18 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N9) end),
                          N33, 33, N14, [N14, N50, N42], N42, [N42, N50, N14], true, true),
    ?equals(_N19 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N20) end),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N110 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb1, AddNodeToTabFun, fun(N) -> not node:equals(N, N66) end),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N111 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N112 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb1, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50, N42], N42, [N42, N50, N8, N14], true, true),
    ?equals(_N113 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb2 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 3, 3),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N8) end),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?equals(_N21 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N14) end),
                          N33, 33, N8, [N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N22 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N42) end),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8], true, true),
    ?equals(_N23 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N50) end),
                          N33, 33, N14, [N14, N8], N42, [N42, N8], true, true),
    ?equals(_N24 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?equals(_N25 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb2, AddNodeToTabFun),
                          N33, 33, N8, [N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N26 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N50, [N50, N8], true, true),
    ?equals(_N27 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N8], true, true),
    ?equals(_N28 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50, N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N9) end),
                          N33, 33, N14, [N14, N50], N42, [N42, N50], true, true),
    ?equals(_N29 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8, N8])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N20) end),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N210 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb2, AddNodeToTabFun, fun(N) -> not node:equals(N, N66) end),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N211 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N212 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb2, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8, N50], N42, [N42, N50, N8], true, true),
    ?equals(_N213 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb3 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 2, 2),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N8) end),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?equals(_N31 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N14) end),
                          N33, 33, N8, [N8], N42, [N42, N50], true, true),
    ?equals(_N32 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N42) end),
                          N33, 33, N14, [N14, N8], N50, [N50], true, true),
    ?equals(_N33 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N50) end),
                          N33, 33, N14, [N14, N8], N42, [N42], true, true),
    ?equals(_N34 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?equals(_N35 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb3, AddNodeToTabFun),
                          N33, 33, N8, [N8], N42, [N42, N50], true, true),
    ?equals(_N36 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N50, [N50], true, true),
    ?equals(_N37 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42], true, true),
    ?equals(_N38 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N50])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N9) end),
                          N33, 33, N14, [N14], N42, [N42, N50], true, true),
    ?equals(_N39 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N8])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N20) end),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N310 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb3, AddNodeToTabFun, fun(N) -> not node:equals(N, N66) end),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N311 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N312 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb3, AddNodeToTabFun),
                          N33, 33, N14, [N14, N8], N42, [N42, N50], true, true),
    ?equals(_N313 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb4 = nodelist:mk_neighborhood([N8, N14, N42, N50], N33, 1, 1),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N8) end),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N41 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N14) end),
                          N33, 33, N42, [N42], N42, [N42], true, true),
    ?equals(_N42 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N42) end),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N43 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N50) end),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N44 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid1, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N45 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid2, Neighb4, AddNodeToTabFun),
                          N33, 33, N42, [N42], N42, [N42], true, true),
    ?equals(_N46 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid5, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N47 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N42])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid6, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N48 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N9) end),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N49 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N20) end),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N410 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb4, AddNodeToTabFun, fun(N) -> not node:equals(N, N66) end),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N411 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N412 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid7, Neighb4, AddNodeToTabFun),
                          N33, 33, N14, [N14], N42, [N42], true, true),
    ?equals(_N413 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    % remove existing nodes:
    ?compare_neighborhood(nodelist:remove2(Neighb5, AddNodeToTabFun, fun(N) -> not node:equals(N, N14) end),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N51 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with the node's pids:
    ?compare_neighborhood(nodelist:remove(pid2, Neighb5, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N52 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),
    % same with an updated node:
    ?compare_neighborhood(nodelist:remove2(Neighb5, AddNodeToTabFun, fun(N) -> not node:equals(N, N15) end),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N53 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([N14, N14])),
    ets:delete_all_objects(RemovedNodesTab),

    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove2(Neighb5, AddNodeToTabFun, fun(N) -> not node:equals(N, N20) end),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N54 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb5, AddNodeToTabFun, fun(N) -> not node:equals(N, N9) end),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N55 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb5, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N56 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid1, Neighb5, AddNodeToTabFun),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    ?equals(_N57 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    % Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    % remove non-existing nodes and pids:
    ?compare_neighborhood(nodelist:remove2(Neighb6, AddNodeToTabFun, fun(N) -> not node:equals(N, N20) end),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove2(Neighb6, AddNodeToTabFun, fun(N) -> not node:equals(N, N9) end),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid3, Neighb6, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),
    ?compare_neighborhood(nodelist:remove(pid1, Neighb6, AddNodeToTabFun),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    ?equals(_N61 = lists:sort(ets:tab2list(RemovedNodesTab)), NodeListToTabListFun([])),
    ets:delete_all_objects(RemovedNodesTab),

    ets:delete(RemovedNodesTab),
    ok.

-spec test_merge(any()) -> ok.
test_merge(_Config) ->
    % use the same tests as in test_add_nodes/1 and let mk_beighborhood create the appropriate neighborhood structures:
        N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), % N8 updated
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated
    N20 = node:new(pid3, 20, 0),
    N21 = node:new(pid3, 21, 1), % N20 updated
    N33 = node:new(pid4, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N50], N33),
    Neighb2 = nodelist:mk_neighborhood([N8, N14, N50], N33, 3, 3),
    Neighb3 = nodelist:mk_neighborhood([N8, N14, N50], N33, 2, 2),
    Neighb4 = nodelist:mk_neighborhood([N8, N14, N50], N33, 1, 1),
    Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    
    % Neighb1 = nodelist:mk_neighborhood([N8, N14, N50], N33),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N66], N42), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42], N66), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N9], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66], N21), 3, 3),
                          N33, 33, N21, [N21, N14, N8], N42, [N42, N50, N66], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N66], N42), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42], N66), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N9], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66], N21), 4, 4),
                          N33, 33, N21, [N21, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N66], N42), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42], N66), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N9], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66], N21), 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),
    
    % Neighb2 = nodelist:mk_neighborhood([N8, N14, N50], N33, 3, 3),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N66], N42), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42], N66), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N9], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66], N21), 3, 3),
                          N33, 33, N21, [N21, N14, N8], N42, [N42, N50, N66], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N66], N42), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42], N66), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N9], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66], N21), 4, 4),
                          N33, 33, N21, [N21, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N66], N42), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42], N66), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N9], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66], N21), 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),

    % Neighb3 = nodelist:mk_neighborhood([N8, N14, N50], N33, 2, 2),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N66], N42), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42], N66), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N9], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66], N21), 3, 3),
                          N33, 33, N21, [N21, N14, N8], N42, [N42, N50, N66], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N66], N42), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42], N66), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N9], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66], N21), 4, 4),
                          N33, 33, N21, [N21, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N66], N42), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42], N66), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N9], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66], N21), 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),

    % Neighb4 = nodelist:mk_neighborhood([N8, N14, N50], N33, 1, 1),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N66], N42), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42], N66), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N9], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66], N21), 3, 3),
                          N33, 33, N21, [N21, N14, N66], N42, [N42, N50, N66], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N66], N42), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42], N66), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N9], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66], N21), 4, 4),
                          N33, 33, N21, [N21, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N66], N42), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42], N66), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N9], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66], N21), 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),
    
    % tests with (almost) empty successor/predecessor lists:
    % Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N66], N42), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42], N66), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N9], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N66, N9], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66], N21), 3, 3),
                          N33, 33, N21, [N21, N14, N66], N42, [N42, N66, N14], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N66], N42), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42], N66), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N9], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N66, N9, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66], N21), 4, 4),
                          N33, 33, N21, [N21, N14, N66, N42], N42, [N42, N66, N14, N21], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N66], N42), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42], N66), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N9], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66], N21), 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N66], true, true),
    
    % adding one node:
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:new_neighborhood(N20), 3, 3),
                          N33, 33, N20, [N20, N14], N14, [N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:new_neighborhood(N15), 3, 3),
                          N33, 33, N15, [N15], N15, [N15], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:new_neighborhood(N33), 3, 3),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    
%%     Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N66], N42), 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42], N66), 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N9], N20), 3, 3),
                          N33, 33, N20, [N20, N9, N66], N42, [N42, N66, N9], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66], N21), 3, 3),
                          N33, 33, N21, [N21, N66, N42], N42, [N42, N66, N21], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66], N20), 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N66], N42), 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42], N66), 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N9], N20), 4, 4),
                          N33, 33, N20, [N20, N9, N66, N42], N42, [N42, N66, N9, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66], N21), 4, 4),
                          N33, 33, N21, [N21, N66, N42], N42, [N42, N66, N21], true, true),
    
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66], N20), 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N66], N42), 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42], N66), 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42, N66, N42], N20), 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N9], N20), 2, 2),
                          N33, 33, N20, [N20, N9], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66], N21), 2, 2),
                          N33, 33, N21, [N21, N66], N42, [N42, N66], true, true),
    
    % adding one node:
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:new_neighborhood(N20), 3, 3),
                          N33, 33, N20, [N20], N20, [N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:new_neighborhood(N33), 3, 3),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    
    % some tests with the base node in the to-be-added nodes:
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N33, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N42, N66, N33], N20), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb1, nodelist:mk_neighborhood([N20, N42, N66], N33), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),

    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N33, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N42, N66, N33], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb2, nodelist:mk_neighborhood([N20, N42, N66], N33), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),

    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N33, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N42, N66, N33], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb3, nodelist:mk_neighborhood([N20, N42, N66], N33), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),

    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N33, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N42, N66, N33], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb4, nodelist:mk_neighborhood([N20, N42, N66], N33), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),

    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N33, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N42, N66, N33], N20), 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb5, nodelist:mk_neighborhood([N20, N42, N66], N33), 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),

    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N33, N66], N20), 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N42, N66, N33], N20), 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:merge(Neighb6, nodelist:mk_neighborhood([N20, N42, N66], N33), 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    
    ok.

%% @doc Tests adding nodes to a neighborhood structure.
-spec test_add_nodes(any()) -> ok.
test_add_nodes(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), % N8 updated
    N14 = node:new(pid2, 14, 0),
    N15 = node:new(pid2, 15, 1), % N14 updated
    N20 = node:new(pid3, 20, 0),
    N21 = node:new(pid3, 21, 1), % N20 updated
    N33 = node:new(pid4, 33, 0),
    N42 = node:new(pid5, 42, 0),
    N50 = node:new(pid6, 50, 0),
    N66 = node:new(pid7, 66, 0),
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N50], N33),
    Neighb2 = nodelist:mk_neighborhood([N8, N14, N50], N33, 3, 3),
    Neighb3 = nodelist:mk_neighborhood([N8, N14, N50], N33, 2, 2),
    Neighb4 = nodelist:mk_neighborhood([N8, N14, N50], N33, 1, 1),
    Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    
    % Neighb1 = nodelist:mk_neighborhood([N8, N14, N50], N33),
    ?equals(nodelist:add_nodes(Neighb1, [], 3, 3), Neighb1),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N42, N20, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N66, N20, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N9], 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N21], 3, 3),
                          N33, 33, N21, [N21, N14, N8], N42, [N42, N50, N66], true, true),
    
    ?equals(nodelist:add_nodes(Neighb1, [], 4, 4), Neighb1),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N42, N20, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N66, N20, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N9], 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N21], 4, 4),
                          N33, 33, N21, [N21, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    
    ?equals(nodelist:add_nodes(Neighb1, [], 2, 2), nodelist:trunc(Neighb1, 2, 2)),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N42, N20, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N66, N20, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N9], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N21], 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),
    
    % Neighb2 = nodelist:mk_neighborhood([N8, N14, N50], N33, 3, 3),
    ?equals(nodelist:add_nodes(Neighb2, [], 3, 3), Neighb2),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N42, N20, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N66, N20, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N9], 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N21], 3, 3),
                          N33, 33, N21, [N21, N14, N8], N42, [N42, N50, N66], true, true),
    
    ?equals(nodelist:add_nodes(Neighb2, [], 4, 4), Neighb2),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N42, N20, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N66, N20, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N9], 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N21], 4, 4),
                          N33, 33, N21, [N21, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    
    ?equals(nodelist:add_nodes(Neighb2, [], 2, 2), nodelist:trunc(Neighb2, 2, 2)),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N42, N20, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N66, N20, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N9], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N21], 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),

    % Neighb3 = nodelist:mk_neighborhood([N8, N14, N50], N33, 2, 2),
    ?equals(nodelist:add_nodes(Neighb3, [], 3, 3), Neighb3),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N42, N20, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N66, N20, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N9], 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N21], 3, 3),
                          N33, 33, N21, [N21, N14, N8], N42, [N42, N50, N66], true, true),
    
    ?equals(nodelist:add_nodes(Neighb3, [], 4, 4), Neighb3),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N42, N20, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N66, N20, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N9], 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N21], 4, 4),
                          N33, 33, N21, [N21, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    
    ?equals(nodelist:add_nodes(Neighb3, [], 2, 2), Neighb3),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N42, N20, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N66, N20, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N9], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N21], 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),

    % Neighb4 = nodelist:mk_neighborhood([N8, N14, N50], N33, 1, 1),
    ?equals(nodelist:add_nodes(Neighb4, [], 3, 3), Neighb4),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N42, N20, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N66, N20, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N9], 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N21], 3, 3),
                          N33, 33, N21, [N21, N14, N66], N42, [N42, N50, N66], true, true),
    
    ?equals(nodelist:add_nodes(Neighb4, [], 4, 4), Neighb4),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N42, N20, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N66, N20, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N9], 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N50, N66, N9], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N21], 4, 4),
                          N33, 33, N21, [N21, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    
    ?equals(nodelist:add_nodes(Neighb4, [], 2, 2), Neighb4),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N42, N20, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N66, N20, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N9], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N21], 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N50], true, true),
    
    % tests with (almost) empty successor/predecessor lists:
    % Neighb5 = nodelist:mk_neighborhood([N14], N33, 1, 1),
    ?equals(nodelist:add_nodes(Neighb5, [], 3, 3), Neighb5),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N42, N20, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N66, N20, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N9], 3, 3),
                          N33, 33, N20, [N20, N14, N9], N42, [N42, N66, N9], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N21], 3, 3),
                          N33, 33, N21, [N21, N14, N66], N42, [N42, N66, N14], true, true),
    
    ?equals(nodelist:add_nodes(Neighb5, [], 4, 4), Neighb5),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N42, N20, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N66, N20, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N9], 4, 4),
                          N33, 33, N20, [N20, N14, N9, N66], N42, [N42, N66, N9, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N21], 4, 4),
                          N33, 33, N21, [N21, N14, N66, N42], N42, [N42, N66, N14, N21], true, true),
    
    ?equals(nodelist:add_nodes(Neighb5, [], 2, 2), Neighb5),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N42, N20, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N66, N20, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N9], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N21], 2, 2),
                          N33, 33, N21, [N21, N14], N42, [N42, N66], true, true),
    
    % adding one node:
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20], 3, 3),
                          N33, 33, N20, [N20, N14], N14, [N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N15], 3, 3),
                          N33, 33, N15, [N15], N15, [N15], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N33], 3, 3),
                          N33, 33, N14, [N14], N14, [N14], true, true),
    
%%     Neighb6 = nodelist:mk_neighborhood([], N33, 1, 1),
    ?equals(nodelist:add_nodes(Neighb6, [], 3, 3), Neighb6),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66], 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N42, N20, N66], 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N66, N20, N42], 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N20, N42, N66, N42], 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N9], 3, 3),
                          N33, 33, N20, [N20, N9, N66], N42, [N42, N66, N9], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N21], 3, 3),
                          N33, 33, N21, [N21, N66, N42], N42, [N42, N66, N21], true, true),
    
    ?equals(nodelist:add_nodes(Neighb6, [], 4, 4), Neighb6),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N42, N20, N66], 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N66, N20, N42], 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N20, N42, N66, N42], 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N9], 4, 4),
                          N33, 33, N20, [N20, N9, N66, N42], N42, [N42, N66, N9, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N21], 4, 4),
                          N33, 33, N21, [N21, N66, N42], N42, [N42, N66, N21], true, true),
    
    ?equals(nodelist:add_nodes(Neighb6, [], 2, 2), Neighb6),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N42, N20, N66], 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N66, N20, N42], 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N20, N42, N66, N42], 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N9], 2, 2),
                          N33, 33, N20, [N20, N9], N42, [N42, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N21], 2, 2),
                          N33, 33, N21, [N21, N66], N42, [N42, N66], true, true),
    
    % adding one node:
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20], 3, 3),
                          N33, 33, N20, [N20], N20, [N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N33], 3, 3),
                          N33, 33, N33, [N33], N33, [N33], false, false),
    
    % some tests with the base node in the to-be-added nodes:
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N33, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N20, N42, N66, N33], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb1, [N33, N20, N42, N66], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),

    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N33, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N20, N42, N66, N33], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb2, [N33, N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),

    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N33, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N8], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N20, N42, N66, N33], 4, 4),
                          N33, 33, N20, [N20, N14, N8, N66], N42, [N42, N50, N66, N8], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb3, [N33, N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),

    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N33, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N50, N66], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N20, N42, N66, N33], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N50], N42, [N42, N50, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb4, [N33, N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N50], true, true),

    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N33, N66], 3, 3),
                          N33, 33, N20, [N20, N14, N66], N42, [N42, N66, N14], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N20, N42, N66, N33], 4, 4),
                          N33, 33, N20, [N20, N14, N66, N42], N42, [N42, N66, N14, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb5, [N33, N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N14], N42, [N42, N66], true, true),

    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N33, N66], 3, 3),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N20, N42, N66, N33], 4, 4),
                          N33, 33, N20, [N20, N66, N42], N42, [N42, N66, N20], true, true),
    ?compare_neighborhood(nodelist:add_nodes(Neighb6, [N33, N20, N42, N66], 2, 2),
                          N33, 33, N20, [N20, N66], N42, [N42, N66], true, true),

    ok.

%% @doc Tests converting neighborhood structures to node lists.
-spec test_to_list(any()) -> ok.
test_to_list(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N14 = node:new(pid2, 14, 0),
    N20 = node:new(pid3, 20, 0),
    N33 = node:new(pid4, 33, 0),
    N50 = node:new(pid5, 50, 0),
    
    Neighb1 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20),
    Neighb2 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 3, 3),
    Neighb3 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 2, 2),
    Neighb4 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 1, 1),
    Neighb5 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 3, 1),
    Neighb6 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 3, 2),
    Neighb7 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 1, 3),
    Neighb8 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 2, 3),
    Neighb9 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 2, 1),
    Neighb10 = nodelist:mk_neighborhood([N8, N14, N33, N50], N20, 1, 2),
    
    ?equals(nodelist:to_list(Neighb1), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb2), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb3), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb4), [N20, N33, N14]),
    ?equals(nodelist:to_list(Neighb5), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb6), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb7), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb8), [N20, N33, N50, N8, N14]),
    ?equals(nodelist:to_list(Neighb9), [N20, N33, N8, N14]),
    ?equals(nodelist:to_list(Neighb10), [N20, N33, N50, N14]),
    
    ok.

%% @doc Tests updating node IDs in two node lists.
-spec test_update_ids(any()) -> ok.
test_update_ids(_Config) ->
    N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), %N8 updated
    N14 = node:new(pid2, 14, 0),
    N20 = node:new(pid3, 20, 0),
    N21 = node:new(pid3, 21, 1), %N20 updated
    N33 = node:new(pid4, 33, 0),
    N50 = node:new(pid5, 50, 0),

    ?equals(nodelist:update_ids([N8, N14, N20, N33, N50], []), {[N8, N14, N20, N33, N50], []}),
    ?equals(nodelist:update_ids([N8, N9, N14, N20, N33, N50], []), {[N9, N9, N14, N20, N33, N50], []}),
    ?equals(nodelist:update_ids([N8, N9, N14, N20, N21, N33, N50], []), {[N9, N9, N14, N21, N21, N33, N50], []}),
    ?equals(nodelist:update_ids([N8, N14, N20, N33], [N50]), {[N8, N14, N20, N33], [N50]}),
    ?equals(nodelist:update_ids([N8, N14, N20], [N33, N50]), {[N8, N14, N20], [N33, N50]}),
    ?equals(nodelist:update_ids([N8, N14], [N20, N33, N50]), {[N8, N14], [N20, N33, N50]}),
    ?equals(nodelist:update_ids([N8], [N14, N20, N33, N50]), {[N8], [N14, N20, N33, N50]}),
    ?equals(nodelist:update_ids([], [N8, N14, N20, N33, N50]), {[], [N8, N14, N20, N33, N50]}),
    ?equals(nodelist:update_ids([], [N8, N9, N14, N20, N33, N50]), {[], [N9, N9, N14, N20, N33, N50]}),
    ?equals(nodelist:update_ids([], [N8, N9, N14, N20, N21, N33, N50]), {[], [N9, N9, N14, N21, N21, N33, N50]}),
    
    ?equals(nodelist:update_ids([N8, N14, N20, N33, N50], [N9]), {[N9, N14, N20, N33, N50], [N9]}),
    ?equals(nodelist:update_ids([N8, N14, N20, N33, N50], [N8]), {[N8, N14, N20, N33, N50], [N8]}),
    ?equals(nodelist:update_ids([N8, N14, N20, N33, N50], [N9, N33]), {[N9, N14, N20, N33, N50], [N9, N33]}),
    ?equals(nodelist:update_ids([N8, N14, N20, N33, N50], [N8, N33]), {[N8, N14, N20, N33, N50], [N8, N33]}),
    ?equals(nodelist:update_ids([N8, N14, N20, N33, N50], [N8, N14, N20, N33, N50]), {[N8, N14, N20, N33, N50], [N8, N14, N20, N33, N50]}),
    ?equals(nodelist:update_ids([N8, N14, N21, N33, N50], [N9, N14, N20, N33, N50]), {[N9, N14, N21, N33, N50], [N9, N14, N21, N33, N50]}),
    ?equals(nodelist:update_ids([N14, N21, N33, N50], [N9, N14, N20, N33]), {[N14, N21, N33, N50], [N9, N14, N21, N33]}),
    ?equals(nodelist:update_ids([N14, N21, N33, N50], [N9, N14, N20, N33]), {[N14, N21, N33, N50], [N9, N14, N21, N33]}),
    
    ?equals(nodelist:update_ids([N14, N20, N33, N50], [N9, N14, N20, N21, N33]), {[N14, N21, N33, N50], [N9, N14, N21, N21, N33]}),
    
    % some tests with "unsorted" lists:
    ?equals(nodelist:update_ids([N50, N14, N21, N8, N33], [N33, N50, N9, N14, N20]), {[N50, N14, N21, N9, N33], [N33, N50, N9, N14, N21]}),
    ?equals(nodelist:update_ids([N14, N33, N50, N21], [N9, N14, N20, N33]), {[N14, N33, N50, N21], [N9, N14, N21, N33]}),
    ?equals(nodelist:update_ids([N14, N21, N33, N50], [N20, N9, N14, N33]), {[N14, N21, N33, N50], [N21, N9, N14, N33]}),
    ?equals(nodelist:update_ids([N33, N14, N20, N50], [N9, N14, N20, N21, N33]), {[N33, N14, N21, N50], [N9, N14, N21, N21, N33]}),
    ok.

%% @doc Tests making removing outdated nodes from a node list.
-spec test_remove_outdated(any()) -> ok.
test_remove_outdated(_Config) ->
    Null = node:null(),
    N8 = node:new(pid1,   8, 0),
    N9 = node:new(pid1,   9, 1), %N8 updated
    N14 = node:new(pid2, 14, 0),
    N20 = node:new(pid3, 20, 0),
    N21 = node:new(pid3, 21, 1), %N20 updated
    N33 = node:new(pid4, 33, 0),
    N50 = node:new(pid5, 50, 0),

    ?equals(nodelist:remove_outdated([]), []),
    ?equals(nodelist:remove_outdated([Null]), []),
    ?equals(nodelist:remove_outdated([N8]), [N8]),
    ?equals(nodelist:remove_outdated([N8, Null]), [N8]),
    ?equals(nodelist:remove_outdated([Null, N8]), [N8]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, N33, N50]), [N8, N14, N20, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, N33, N50, Null]), [N8, N14, N20, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, Null, N33, N50]), [N8, N14, N20, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N9]), [N9]),
    ?equals(nodelist:remove_outdated([Null, N8, N9]), [N9]),
    ?equals(nodelist:remove_outdated([N8, Null, N9]), [N9]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N33, N50]), [N9, N14, N20, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N21, N33, N50]), [N9, N14, N21, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N8, N21, N33, N50]), [N9, N14, N21, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N21, N33, N50, N50]), [N9, N14, N21, N33, N50, N50]),

    ?equals(nodelist:remove_outdated([], N50), []),
    ?equals(nodelist:remove_outdated([Null], N50), []),
    ?equals(nodelist:remove_outdated([N8], N50), [N8]),
    ?equals(nodelist:remove_outdated([N8, Null], N50), [N8]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, N33], N50), [N8, N14, N20, N33]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, N33, N50], N50), [N8, N14, N20, N33]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, N33, N50, Null], N50), [N8, N14, N20, N33]),
    ?equals(nodelist:remove_outdated([N8, N14, N20, Null, N33, N50], N50), [N8, N14, N20, N33]),
    ?equals(nodelist:remove_outdated([N8, N9], N50), [N9]),
    ?equals(nodelist:remove_outdated([Null, N8, N9], N50), [N9]),
    ?equals(nodelist:remove_outdated([N8, Null, N9], N50), [N9]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N33, N50], N50), [N9, N14, N20, N33]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N21, N33, N50], N50), [N9, N14, N21, N33]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N8, N21, N33, N50], N50), [N9, N14, N21, N33]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N21, N33, N33, N50, N50], N50), [N9, N14, N21, N33, N33]),
    
    % some tests with "unsorted" lists:
    ?equals(nodelist:remove_outdated([N14, N8, N20, N33, N50]), [N14, N8, N20, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N20, N33, N14, N50, Null]), [N8, N20, N33, N14, N50]),
    ?equals(nodelist:remove_outdated([N8, N20, N33, N14, Null, N50]), [N8, N20, N33, N14, N50]),
    ?equals(nodelist:remove_outdated([N9, N8]), [N9]),
    ?equals(nodelist:remove_outdated([Null, N9, N8]), [N9]),
    ?equals(nodelist:remove_outdated([N9, Null, N8]), [N9]),
    ?equals(nodelist:remove_outdated([N8, N20, N33, N50, N9, N14]), [N20, N33, N50, N9, N14]),
    ?equals(nodelist:remove_outdated([N9, N14, N20, N8, N21, N33, N50]), [N9, N14, N21, N33, N50]),
    ?equals(nodelist:remove_outdated([N8, N9, N14, N20, N8, N21, N33, N50]), [N9, N14, N21, N33, N50]),
    ?equals(nodelist:remove_outdated([N9, N50, N14, N20, N8, N21, N33, N50]), [N9, N50, N14, N21, N33, N50]),
    
    ?equals(nodelist:remove_outdated([N14, N8, N20, N33, N50], N50), [N14, N8, N20, N33]),
    ?equals(nodelist:remove_outdated([N8, N20, N33, N14, N50, Null], N50), [N8, N20, N33, N14]),
    ?equals(nodelist:remove_outdated([N8, N20, N33, N14, Null, N50], N50), [N8, N20, N33, N14]),
    ?equals(nodelist:remove_outdated([N9, N8], N50), [N9]),
    ?equals(nodelist:remove_outdated([Null, N9, N8], N50), [N9]),
    ?equals(nodelist:remove_outdated([N9, Null, N8], N50), [N9]),
    ?equals(nodelist:remove_outdated([N8, N20, N33, N50, N9, N14], N50), [N20, N33, N9, N14]),
    ?equals(nodelist:remove_outdated([N9, N14, N20, N8, N21, N33, N50], N50), [N9, N14, N21, N33]),
    ?equals(nodelist:remove_outdated([N9, N14, N20, N8, N21, N33], N50), [N9, N14, N21, N33]),
    ?equals(nodelist:remove_outdated([N9, N14, N20, N8, N21, N8, N33], N50), [N9, N14, N21, N33]),
    ?equals(nodelist:remove_outdated([N9, N14, N20, N8, N21, N33], N50), [N9, N14, N21, N33]),
    ok.
